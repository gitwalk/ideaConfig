<application>
  <component name="AppStorage">
    <histories>
      <item value="Initialization" />
      <item value="1. `spring-core` and `spring-oxm` should be pre-compiled due to repackaged dependencies. See `*RepackJar` tasks in the build and https://youtrack.jetbrains.com/issue/IDEA-160605). 2. `spring-aspects` does not compile due to references to aspect types unknown to IntelliJ IDEA. See https://youtrack.jetbrains.com/issue/IDEA-64446 for details. In the meantime, the 'spring-aspects' can be excluded from the project to avoid compilation errors. 3. While JUnit tests pass from the command line with Gradle, some may fail when run from IntelliJ IDEA. Resolving this is a work in progress. If attempting to run all JUnit tests from within IntelliJ IDEA, you will likely need to set the following VM options to avoid out of memory errors: -XX:MaxPermSize=2048m -Xmx2048m -XX:MaxHeapSize=2048m 4. If you invoke &quot;Rebuild Project&quot; in the IDE, you'll have to generate some test resources of the `spring-oxm` module again (`./gradlew :spring-oxm:compileTestJava`)" />
      <item value="Navigate" />
      <item value="When prompted exclude the `spring-aspects` module (or after the import via File-&gt; Project Structure -&gt; Modules) 4. Code away" />
      <item value="CREDENTIALS" />
      <item value="/** * Used to dereference a {@link FactoryBean} instance and distinguish it from * beans &lt;i&gt;created&lt;/i&gt; by the FactoryBean. For example, if the bean named * {@code myJndiObject} is a FactoryBean, getting {@code &amp;myJndiObject} * will return the factory, not the instance returned by the factory. */" />
      <item value="Mapped Statements collection does not contain value for com.bupt.cad.metadataserver.dao.DictionaryDao.findByDictCode" />
      <item value="The Web UI provides navigation between the bits of information and the ability to annotate the collected data with comments, ownership and more. The example below is for collecting Hive metadata collected from the Cloudera Hadoop VM Wherehows comes in three operational components: - [Backend service](../wherehows-backend/README.md) - **A web-ui service** - Database schema for MySQL" />
      <item value="return all declared fields of the class, exclude inherited fields" />
      <item value="stagging table for dataset" />
      <item value="/** * The DataOriginView class is used to find our dataset data origin. Previously, the values EI, CORP, and PROD * were hardcoded into the frontend UI, but users actually wanted even more information about the cluster the * data lives on (e.g. Holdem, War). */" />
      <item value="Lineage" />
      <item value="Get downstream datasets lineage for a certain dataset, similar to downstream datasets but with * lineage data attached" />
      <item value="Causes the current thread to wait, if necessary, until the * process represented by this {@code Process} object has * terminated. This method returns immediately if the subprocess * has already terminated. If the subprocess has not yet * terminated, the calling thread will be blocked until the * subprocess exits. * * @return the exit value of the subprocess represented by this * {@code Process} object. By convention, the value * {@code 0} indicates normal termination. * @throws InterruptedException if the current thread is * {@linkplain Thread#interrupt() interrupted} by another * thread while it is waiting, then the wait is ended and * an {@link InterruptedException} is thrown. */" />
      <item value="indicates if this part is the leftmost in the range" />
      <item value="/** * Sorts the specified range of the array using the given * workspace array slice if possible for merging * * @param a the array to be sorted * @param left the index of the first element, inclusive, to be sorted * @param right the index of the last element, inclusive, to be sorted * @param work a workspace array (slice) * @param workBase origin of usable space in work array * @param workLen usable size of work array */" />
      <item value="* Adapter no-op implementation - does nothing and returns immediately. * * @param session the session that has expired." />
      <item value="/** * Adapter no-op implementation - does nothing and returns immediately. * * @param session the session that has stopped." />
      <item value="Simple adapter implementation of the {@link SessionListener} interface, effectively providing * no-op implementations of all methods. *" />
      <item value="* Retrieves the Session object from the underlying EIS identified by &lt;tt&gt;sessionId&lt;/tt&gt; by delegating to * the {@link #doReadSession(java.io.Serializable)} method. If {@code null} is returned from that method, an * {@link UnknownSessionException} will be thrown. * * @param sessionId the id of the session to retrieve from the EIS. * @return the session identified by &lt;tt&gt;sessionId&lt;/tt&gt; in the EIS. * @throws UnknownSessionException if the id specified does not correspond to any session in the EIS. */" />
      <item value="/** * Get the value of {@code key}. * * @param key must not be {@literal null}. * @return {@literal null} when used in pipeline / transaction. * @see &lt;a href=&quot;http://redis.io/commands/get&quot;&gt;Redis Documentation: GET&lt;/a&gt; */" />
      <item value="/** * Retrieves the session from the EIS uniquely identified by the specified * {@code sessionId}. * * @param sessionId the system-wide unique identifier of the Session object to retrieve from * the EIS. * @return the persisted session in the EIS identified by {@code sessionId}. * @throws UnknownSessionException if there is no EIS record for any session with the * specified {@code sessionId} */" />
      <item value="DEPARTMENT" />
      <item value="/** * Asserts this Subject has the specified role by returning quietly if they do or throwing an * {@link org.apache.shiro.authz.AuthorizationException} if they do not. * * @param roleIdentifier the application-specific role identifier (usually a role id or role name ). * @throws org.apache.shiro.authz.AuthorizationException * if this Subject does not have the role. */" />
      <item value="/** * Returns {@code true} if this Subject has the specified role, {@code false} otherwise. * * @param roleIdentifier the application-specific role identifier (usually a role id or role name). * @return {@code true} if this Subject has the specified role, {@code false} otherwise. */" />
      <item value="get User Distributions" />
      <item value="Exception thrown when attempting to execute an authorization action when a successful * authentication hasn't yet occurred. * * &lt;p&gt;Authorizations can only be performed after a successful * authentication because authorization data (roles, permissions, etc) must always be associated * with a known identity. Such a known identity can only be obtained upon a successful log-in. * * @since 0.1" />
      <item value="Applies distortion by adding shadow to the text and also two noises. * * @param baseImage the base image * @return the distorted image" />
      <item value="Single Partition" />
      <item value="Zone" />
      <item value="Factor" />
      <item value="Default Bean Validation group. * &lt;p&gt; * Unless a list of groups is explicitly defined: * &lt;ul&gt; * &lt;li&gt;constraints belong to the {@code Default} group&lt;/li&gt; * &lt;li&gt;validation applies to the {@code Default} group&lt;/li&gt; * &lt;/ul&gt; * Most structural constraints should belong to the default group. * * @author Emmanuel Bernard" />
      <item value="Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'" />
      <item value="fail" />
      <item value="catalina.home" />
      <item value="cannot assign instance of java.lang.invoke.SerializedLambda to field org.apache.spark.api.java.JavaPairRDD$$anonfun$toScalaFunction$1.fun$1 of type org.apache.spark.api.java.function.Function in instance of org.apache.spark.api.java.JavaPairRDD$$anonfun$toScalaFunction$1" />
      <item value="Lost task 0.0 in stage 1.0 (TID 1, slave4.hadoop, executor 1): java.lang.ClassCastException: cannot assign instance of java.lang.invoke.SerializedLambda to field org.apache.spark.api.java.JavaPairRDD$$anonfun$toScalaFunction$1.fun$1 of type org.apache.spark.api.java.function.Function in instance of org.apache.spark.api.java.JavaPairRDD$$anonfun$toScalaFunction$1" />
      <item value="Service 'sparkDriver' failed after 16 retries (on a random free port)! Consider explicitly setting the appropriate binding address for the service 'sparkDriver' (for example spark.driver.bindAddress for SparkDriver) to the correct binding address." />
      <item value="Validates parameters and return values of methods and constructors. * Implementations of this interface must be thread-safe." />
      <item value="Executable" />
      <item value="/** * Returns the fully-qualified name of the declaring type. This is * equivalent to calling getDeclaringType().getName(), but caches * the result for greater efficiency. */" />
      <item value="&lt;p&gt;Returns a &lt;code&gt;java.lang.Class&lt;/code&gt; object representing the class, * interface, or aspect that declared this member. For intra-member * declarations, this will be the type on which the member is declared, * not the type where the declaration is lexically written. Use * &lt;code&gt;SourceLocation.getWithinType()&lt;/code&gt; to get the type in * which the declaration occurs lexically.&lt;/p&gt; * &lt;p&gt;For consistency with &lt;code&gt;java.lang.reflect.Member&lt;/code&gt;, this * method should have been named &lt;code&gt;getDeclaringClass()&lt;/code&gt;.&lt;/p&gt; *" />
      <item value="encapsulates" />
      <item value="Returns an object that encapsulates the static parts of this join point. */" />
      <item value="arguments" />
      <item value="Returns the signature at the join point." />
      <item value="When compiling without debug info, or when interpreting pointcuts at runtime, * the names of any arguments used in the advice declaration are not available. * Under these circumstances only, it is necessary to provide the arg names in * the annotation - these MUST duplicate the names used in the annotated method. * Format is a simple comma-separated list." />
      <item value="The pointcut expression where to bind the advice" />
      <item value="** * Specify one or more validation groups to apply to the validation step * kicked off by this annotation. * &lt;p&gt;JSR-303 defines validation groups as custom annotations which an application declares * for the sole purpose of using them as type-safe group arguments, as implemented in * {@link org.springframework.validation.beanvalidation.SpringValidatorAdapter}. * &lt;p&gt;Other {@link org.springframework.validation.SmartValidator} implementations may * support class arguments in other ways as well. */" />
      <item value="* Construct a new ReflectiveMethodInvocation with the given arguments. * @param proxy the proxy object that the invocation was made on * @param target the target object to invoke * @param method the method to invoke * @param arguments the arguments to invoke the method with * @param targetClass the target class, for MethodMatcher invocations * @param interceptorsAndDynamicMethodMatchers interceptors that should be applied, * along with any InterceptorAndDynamicMethodMatchers that need evaluation at runtime. * MethodMatchers included in this struct must already have been found to have matched * as far as was possibly statically. Passing an array might be about 10% faster, * but would complicate the code. And it would work only for static pointcuts. */" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="123" />
        <entry key="ENGLISH" value="124" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>