<application>
  <component name="AppStorage">
    <histories>
      <item value="RANDOM" />
      <item value="add Promotion" />
      <item value="Promotion" />
      <item value="Manual" />
      <item value="diamond" />
      <item value="Broker" />
      <item value="ORDER SPAM INVALID CLICK" />
      <item value="spam" />
      <item value="INCREMENTAL" />
      <item value="Facade" />
      <item value="Cancelled" />
      <item value="Paid" />
      <item value="INVALID FOR AFFILIATE FLAG" />
      <item value="Subject Matter Term Detail" />
      <item value="maybe Event Handler Constructor" />
      <item value="Spline Query Execution Listener" />
      <item value="Dispatcher" />
      <item value="qualifier" />
      <item value="HDFS Path Qualifier" />
      <item value="Spline Short Type Hints" />
      <item value="Harvester Json Ser De" />
      <item value="Default Ignored Write Detection Strategy" />
      <item value="User Extra Metadata Provider" />
      <item value="exception" />
      <item value="extra" />
      <item value="Harvester" />
      <item value="dispatcher" />
      <item value="Expression" />
      <item value="Turbine Run Data" />
      <item value="Identify and stop the process that's listening on port 8761 or configure this application to listen on another port." />
      <item value="destination" />
      <item value="A map from a final select operator id to the select operator * and the corresponding target table in case an insert into query." />
      <item value="A map from a final select operator id to the select operator * and the corresponding target table in case an insert into query" />
      <item value="A map from operator to the conditions strings." />
      <item value="ALLSCOPE EXCEPT COLUMN" />
      <item value="Generate normalized name for a given target column" />
      <item value="Unable to fetch table" />
      <item value="Write the status of tables to a file." />
      <item value="Find whether the current query is a logical explain query" />
      <item value="Either list of columns or a custom serializer should be specified" />
      <item value="gen File Sink Plan" />
      <item value="Go over all the destination tables" />
      <item value="Constructs a standard group by plan if: // There is no other subquery with the same group by/distinct keys or // (There are no aggregations in a representative query for the group and // There is no group by in that representative query) or // The data is skewed or // The conf variable used to control combining group bys into a single reducer is false" />
      <item value="There is no other subquery with the same group by/distinct keys or" />
      <item value="Constructs a standard group by plan if:" />
      <item value="Iterate over each group of subqueries with the same group by/distinct keys" />
      <item value="If we can put multiple group bys in a single reducer, determine suitable groups of // expressions, otherwise treat all the expressions as a single group" />
      <item value="partitioned table functions" />
      <item value="After processing subqueries and source tables, process" />
      <item value="Recurse over all the source tables" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="482" />
        <entry key="ENGLISH" value="483" />
        <entry key="FRENCH" value="1" />
        <entry key="DUTCH" value="6" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>