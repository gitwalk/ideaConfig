<application>
  <component name="AppStorage">
    <histories>
      <item value="task timeout parameter" />
      <item value="Parameters" />
      <item value="Talk is cheap. Show me the code" />
      <item value="custom global params" />
      <item value="check the process definition node meets the specifications" />
      <item value="connects for nodes" />
      <item value="locations for nodes" />
      <item value="execute process instance" />
      <item value="do action to process instance" />
      <item value="do action to process instanceï¼špause, stop, repeat, recover from pause, recover from stop" />
      <item value="submit Stand By Task" />
      <item value="Stand" />
      <item value="whether the retry interval is timed out" />
      <item value="handling the list of tasks to be submitted" />
      <item value="add Task To Stand By List" />
      <item value="Master Base Task Exec Thread" />
      <item value="if the running task is not completed, the state remains unchanged" />
      <item value="active task and retry task exists" />
      <item value="after each batch of tasks is executed, the status of the process instance is updated" />
      <item value="find Process Instance By Id" />
      <item value="updateProcessInstance process instance state * after each batch of tasks is executed, the status of the process instance is updated" />
      <item value="update Process Instance State" />
      <item value="can Submit Task To Queue" />
      <item value="updateProcessInstance completed task status // failure priority is higher than pause // if a task fails, other suspended tasks need to be reset kill" />
      <item value="have Conditions After Node" />
      <item value="is Conditions Task" />
      <item value="node fails, retry first, and then execute the failure process" />
      <item value="NEED FAULT TOLERANCE" />
      <item value="recover Tolerance Fault Task List" />
      <item value="node monitor thread complete" />
      <item value="send warning email if process time out." />
      <item value="submit and watch the tasks, until the work flow stop" />
      <item value="find Valid Task List By Process Id" />
      <item value="init task queue" />
      <item value="is Task Complete" />
      <item value="prepare process parameter" />
      <item value="check to see if it's done" />
      <item value="sub process complement data" />
      <item value="complement" />
      <item value="execute complement process" />
      <item value="generate process dag" />
      <item value="the task can be submit when all the depends nodes are forbidden or complete" />
      <item value="master exec thread,split dag" />
      <item value="parse the forbidden task nodes in process definition." />
      <item value="get Forbidden Task Node Maps" />
      <item value="generate flow node relation list by task node list;" />
      <item value="no special designation start nodes" />
      <item value="dest" />
      <item value="dest Task Node List" />
      <item value="dep Node Type" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="655" />
        <entry key="ENGLISH" value="656" />
        <entry key="DANISH" value="2" />
        <entry key="GERMAN" value="1" />
        <entry key="FRENCH" value="2" />
        <entry key="FILIPINO" value="1" />
        <entry key="DUTCH" value="6" />
        <entry key="KURDISH" value="1" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="SWEDISH" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>